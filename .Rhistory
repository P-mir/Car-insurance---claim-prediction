# if (!is.null(d.tree$csplit))
# {
#    plot(d.tree,main = "Regression tree, small d")
#    text(d.tree) #equivalent to labels(d.tree)
# }
for (i in 1:length(segments)){
lambdaK[[i]] <-lambdaK[[i]]+predict(d.tree,segments[[i]])
}
}
for (i in 1:length(segments)){
lambdaK[[i]] = lambdaK[[i]]/M
}
ages = c("age>20","20<age<40","40<age<60","age>60")
ages = c("age>20","20<age<40","40<age<60","age>60")
driverage = c(mean(lambdaK[[33]]),mean(lambdaK[[34]]),mean(lambdaK[[35]]),mean(lambdaK[[36]]))
driverage_c1 = c(mean(lambdaK[[37]]),mean(lambdaK[[38]]),mean(lambdaK[[39]]),mean(lambdaK[[40]]))
plot(ages,,type="l",col="darkblue",lwd=wd,xlab= "Area category",ylab = "Claim frequency",ylim=lim)
par(new = TRUE)
plot(ages,driverage_c1,type="l",xlab= "Area category",lwd=wd,ylab = "Claim frequency",col="yellow",ylim=lim)
par(new = TRUE)
driverage
plot(ages,driverage,type="l",col="darkblue",lwd=wd,xlab= "Area category",ylab = "Claim frequency",ylim=lim)
par(new = TRUE)
plot(ages,driverage_c1,type="l",xlab= "Area category",lwd=wd,ylab = "Claim frequency",col="yellow",ylim=lim)
par(new = TRUE)
plot(ages,driverage,type="l",col="darkblue",lwd=wd,xlab= "Area category",ylab = "Claim frequency",ylim=lim)
par(new = TRUE)
plot(ages,driverage_c1,type="l",xlab= "Area category",lwd=wd,ylab = "Claim frequency",col="yellow",ylim=lim)
driverage_c1
driverage
driverage
ages
ages = c(1,2,3,4)
### prediction of claimfreq depending of age and contract
# 33-36 37-40 41-44 45-48
ages = c(1,2,3,4)
#c("age>20","20<age<40","40<age<60","age>60")
driverage = c(mean(lambdaK[[33]]),mean(lambdaK[[34]]),mean(lambdaK[[35]]),mean(lambdaK[[36]]))
driverage_c1 = c(mean(lambdaK[[37]]),mean(lambdaK[[38]]),mean(lambdaK[[39]]),mean(lambdaK[[40]]))
driverage_c2 = c(mean(lambdaK[[41]]),mean(lambdaK[[42]]),mean(lambdaK[[43]]),mean(lambdaK[[44]]))
driverage_c3 = c(mean(lambdaK[[45]]),mean(lambdaK[[46]]),mean(lambdaK[[47]]),mean(lambdaK[[48]]))
lim = c(0.0085,0.0097)
wd=2
plot(ages,driverage,type="l",col="darkblue",lwd=wd,xlab= "Area category",ylab = "Claim frequency",ylim=lim)
par(new = TRUE)
plot(ages,driverage_c1,type="l",xlab= "Area category",lwd=wd,ylab = "Claim frequency",col="yellow",ylim=lim)
par(new = TRUE)
plot(ages,driverage_c2,type="l",xlab= "Area category",lwd=wd,ylab = "Claim frequency",col="brown",ylim=lim)
par(new = TRUE)
plot(ages,driverage_c3,type="l",xlab= "Area category",lwd=wd,ylab = "Claim frequency",col="purple",ylim=lim)
legend("bottomleft",c("Male", "Female"),lwd = c(2,2),lty=c(1,1), col=c("darkblue","brown"),cex=1,text.font=6,bty="n")
lim = c(0.0088,0.0093)
wd=2
plot(c(1,2,3,4),c(mean(lambdaK[[9]]),mean(lambdaK[[10]]),mean(lambdaK[[11]]),mean(lambdaK[[12]])),type="l",col="darkblue",lwd=wd,xlab= "Area category",ylab = "Claim frequency",ylim=lim)
par(new = TRUE)
plot(c(1,2,3,4),c(mean(lambdaK[[13]]),mean(lambdaK[[14]]),mean(lambdaK[[15]]),mean(lambdaK[[16]])),type="l",xlab= "Area category",lwd=wd,ylab = "Claim frequency",col="brown",ylim=lim)
legend("bottomleft",c("Male", "Female"),lwd = c(2,2),lty=c(1,1), col=c("darkblue","brown"),cex=1,text.font=6,bty="n")
### prediction of claimfreq depending of age and contract
# 33-36 37-40 41-44 45-48
ages = c(1,2,3,4)
driverage = c(mean(lambdaK[[33]]),mean(lambdaK[[34]]),mean(lambdaK[[35]]),mean(lambdaK[[36]]))
driverage_c1 = c(mean(lambdaK[[37]]),mean(lambdaK[[38]]),mean(lambdaK[[39]]),mean(lambdaK[[40]]))
driverage_c2 = c(mean(lambdaK[[41]]),mean(lambdaK[[42]]),mean(lambdaK[[43]]),mean(lambdaK[[44]]))
driverage_c3 = c(mean(lambdaK[[45]]),mean(lambdaK[[46]]),mean(lambdaK[[47]]),mean(lambdaK[[48]]))
lim = c(0.0085,0.0097)
wd=2
plot(ages,driverage,type="l",col="darkblue",lwd=wd,xlab= "Age categories",ylab = "Claim frequency",ylim=lim)
par(new = TRUE)
plot(ages,driverage_c1,type="l",xlab= "Age categories",lwd=wd,lty=2,ylab = "Claim frequency",col="yellow",ylim=lim)
par(new = TRUE)
plot(ages,driverage_c2,type="l",xlab= "Age categories",lwd=wd,lty=3,ylab = "Claim frequency",col="orange",ylim=lim)
par(new = TRUE)
plot(ages,driverage_c3,type="l",xlab= "Age categories",lwd=wd,lty=5,ylab = "Claim frequency",col="red",ylim=lim)
par(cex = 0.8)
legend("topleft",c("All ages","age>20","20<age<40","40<age<60","age>60"),lwd = c(2,2,2,2,2),lty=c(1,2,3,5), col=c("darkblue","yellow","orange","red"),cex=0.8,text.font=6,bty="n")
### prediction of claimfreq depending of age and contract
# 33-36 37-40 41-44 45-48
ages = c(1,2,3,4)
driverage = c(mean(lambdaK[[33]]),mean(lambdaK[[34]]),mean(lambdaK[[35]]),mean(lambdaK[[36]]))
driverage_c1 = c(mean(lambdaK[[37]]),mean(lambdaK[[38]]),mean(lambdaK[[39]]),mean(lambdaK[[40]]))
driverage_c2 = c(mean(lambdaK[[41]]),mean(lambdaK[[42]]),mean(lambdaK[[43]]),mean(lambdaK[[44]]))
driverage_c3 = c(mean(lambdaK[[45]]),mean(lambdaK[[46]]),mean(lambdaK[[47]]),mean(lambdaK[[48]]))
lim = c(0.0085,0.0097)
wd=2
plot(ages,driverage,type="l",col="darkblue",lwd=wd,xlab= "Age categories",ylab = "Claim frequency",ylim=lim)
par(new = TRUE)
plot(ages,driverage_c1,type="l",xlab= "Age categories",lwd=wd,lty=2,ylab = "Claim frequency",col="yellow",ylim=lim)
par(new = TRUE)
plot(ages,driverage_c2,type="l",xlab= "Age categories",lwd=wd,lty=3,ylab = "Claim frequency",col="orange",ylim=lim)
par(new = TRUE)
plot(ages,driverage_c3,type="l",xlab= "Age categories",lwd=wd,lty=5,ylab = "Claim frequency",col="red",ylim=lim)
par(cex = 0.8)
legend("topleft",c("No contracts distinction","basic garantee","intermediate garantee","full garantee"),lwd = c(2,2,2,2,2),lty=c(1,2,3,5), col=c("darkblue","yellow","orange","red"),cex=0.8,text.font=6,bty="n")
#"age>20","20<age<40","40<age<60","age>60"
lim = c(0.009,0.0093)
wd=2
plot(c(1,2,3,4),c(mean(lambdaK[[9]]),mean(lambdaK[[10]]),mean(lambdaK[[11]]),mean(lambdaK[[12]])),type="l",col="darkblue",lwd=wd,xlab= "Area category",ylab = "Claim frequency",ylim=lim)
par(new = TRUE)
plot(c(1,2,3,4),c(mean(lambdaK[[13]]),mean(lambdaK[[14]]),mean(lambdaK[[15]]),mean(lambdaK[[16]])),type="l",xlab= "Area category",lwd=wd,ylab = "Claim frequency",col="brown",ylim=lim)
legend("bottomleft",c("Male", "Female"),lwd = c(2,2),lty=c(1,1), col=c("darkblue","brown"),cex=1,text.font=6,bty="n")
### prediction of claimfreq depending of age and contract
# 33-36 37-40 41-44 45-48
ages = c(1,2,3,4)
driverage = c(mean(lambdaK[[33]]),mean(lambdaK[[34]]),mean(lambdaK[[35]]),mean(lambdaK[[36]]))
driverage_c1 = c(mean(lambdaK[[37]]),mean(lambdaK[[38]]),mean(lambdaK[[39]]),mean(lambdaK[[40]]))
driverage_c2 = c(mean(lambdaK[[41]]),mean(lambdaK[[42]]),mean(lambdaK[[43]]),mean(lambdaK[[44]]))
driverage_c3 = c(mean(lambdaK[[45]]),mean(lambdaK[[46]]),mean(lambdaK[[47]]),mean(lambdaK[[48]]))
lim = c(0.009,0.0097)
wd=2
plot(ages,driverage,type="l",col="darkblue",lwd=wd,xlab= "Age categories",ylab = "Claim frequency",ylim=lim)
par(new = TRUE)
plot(ages,driverage_c1,type="l",xlab= "Age categories",lwd=wd,lty=2,ylab = "Claim frequency",col="yellow",ylim=lim)
par(new = TRUE)
plot(ages,driverage_c2,type="l",xlab= "Age categories",lwd=wd,lty=3,ylab = "Claim frequency",col="orange",ylim=lim)
par(new = TRUE)
plot(ages,driverage_c3,type="l",xlab= "Age categories",lwd=wd,lty=5,ylab = "Claim frequency",col="red",ylim=lim)
par(cex = 0.8)
legend("topleft",c("No contracts distinction","basic garantee","intermediate garantee","full garantee"),lwd = c(2,2,2,2,2),lty=c(1,2,3,5), col=c("darkblue","yellow","orange","red"),cex=0.8,text.font=6,bty="n")
#"age>20","20<age<40","40<age<60","age>60"
### prediction of claimfreq depending of age and contract
# 33-36 37-40 41-44 45-48
ages = c(1,2,3,4)
driverage = c(mean(lambdaK[[33]]),mean(lambdaK[[34]]),mean(lambdaK[[35]]),mean(lambdaK[[36]]))
driverage_c1 = c(mean(lambdaK[[37]]),mean(lambdaK[[38]]),mean(lambdaK[[39]]),mean(lambdaK[[40]]))
driverage_c2 = c(mean(lambdaK[[41]]),mean(lambdaK[[42]]),mean(lambdaK[[43]]),mean(lambdaK[[44]]))
driverage_c3 = c(mean(lambdaK[[45]]),mean(lambdaK[[46]]),mean(lambdaK[[47]]),mean(lambdaK[[48]]))
lim = c(0.009,0.0097)
wd=2
plot(ages,driverage,type="l",col="darkblue",lwd=wd,xlab= "Age categories",ylab = "Claim frequency",ylim=lim)
par(new = TRUE)
plot(ages,driverage_c1,type="l",xlab= "Age categories",lwd=wd,lty=2,ylab = "Claim frequency",col="yellow",ylim=lim)
par(new = TRUE)
plot(ages,driverage_c2,type="l",xlab= "Age categories",lwd=wd,lty=3,ylab = "Claim frequency",col="orange",ylim=lim)
par(new = TRUE)
plot(ages,driverage_c3,type="l",xlab= "Age categories",lwd=wd,lty=5,ylab = "Claim frequency",col="red",ylim=lim)
par(cex = 0.8)
legend("topright",c("No contracts distinction","basic garantee","intermediate garantee","full garantee"),lwd = c(2,2,2,2,2),lty=c(1,2,3,5), col=c("darkblue","yellow","orange","red"),cex=0.8,text.font=6,bty="n")
#"age>20","20<age<40","40<age<60","age>60"
### prediction of claimfreq depending of age and contract
# 33-36 37-40 41-44 45-48
ages = c(1,2,3,4)
driverage = c(mean(lambdaK[[33]]),mean(lambdaK[[34]]),mean(lambdaK[[35]]),mean(lambdaK[[36]]))
driverage_c1 = c(mean(lambdaK[[37]]),mean(lambdaK[[38]]),mean(lambdaK[[39]]),mean(lambdaK[[40]]))
driverage_c2 = c(mean(lambdaK[[41]]),mean(lambdaK[[42]]),mean(lambdaK[[43]]),mean(lambdaK[[44]]))
driverage_c3 = c(mean(lambdaK[[45]]),mean(lambdaK[[46]]),mean(lambdaK[[47]]),mean(lambdaK[[48]]))
lim = c(0.009,0.0097)
wd=2
plot(ages,driverage,type="l",col="darkblue",lwd=wd,xlab= "Age categories",ylab = "Claim frequency",ylim=lim)
par(new = TRUE)
plot(ages,driverage_c1,type="l",xlab= "Age categories",lwd=wd,lty=2,ylab = "Claim frequency",col="darkgreen",ylim=lim)
par(new = TRUE)
plot(ages,driverage_c2,type="l",xlab= "Age categories",lwd=wd,lty=3,ylab = "Claim frequency",col="darkorange",ylim=lim)
par(new = TRUE)
plot(ages,driverage_c3,type="l",xlab= "Age categories",lwd=wd,lty=5,ylab = "Claim frequency",col="darkred",ylim=lim)
par(cex = 0.8)
legend("topright",c("No contracts distinction","basic garantee","intermediate garantee","full garantee"),lwd = c(2,2,2,2,2),lty=c(1,2,3,5), col=c("darkblue","darkgreen","darkorange","darkred"),cex=0.8,text.font=6,bty="n")
#"age>20","20<age<40","40<age<60","age>60"
### prediction of claimfreq depending of age and contract
# 33-36 37-40 41-44 45-48
ages = c(1,2,3,4)
driverage = c(mean(lambdaK[[33]]),mean(lambdaK[[34]]),mean(lambdaK[[35]]),mean(lambdaK[[36]]))
driverage_c1 = c(mean(lambdaK[[37]]),mean(lambdaK[[38]]),mean(lambdaK[[39]]),mean(lambdaK[[40]]))
driverage_c2 = c(mean(lambdaK[[41]]),mean(lambdaK[[42]]),mean(lambdaK[[43]]),mean(lambdaK[[44]]))
driverage_c3 = c(mean(lambdaK[[45]]),mean(lambdaK[[46]]),mean(lambdaK[[47]]),mean(lambdaK[[48]]))
lim = c(0.009,0.0097)
wd=2
plot(ages,driverage,type="l",col="darkblue",lwd=wd,xlab= "Age categories",ylab = "Claim frequency",ylim=lim)
par(new = TRUE)
plot(ages,driverage_c1,type="l",xlab= "Age categories",lwd=wd,ylab = "Claim frequency",col="darkgreen",ylim=lim)
par(new = TRUE)
plot(ages,driverage_c2,type="l",xlab= "Age categories",lwd=wd,ylab = "Claim frequency",col="darkorange",ylim=lim)
par(new = TRUE)
plot(ages,driverage_c3,type="l",xlab= "Age categories",lwd=wd,ylab = "Claim frequency",col="darkred",ylim=lim)
par(cex = 0.8)
legend("topright",c("No contracts distinction","basic garantee","intermediate garantee","full garantee"),lwd = c(2,2,2,2,2),lty=c(1,1,1,1), col=c("darkblue","darkgreen","darkorange","darkred"),cex=0.8,text.font=6,bty="n")
#"age>20","20<age<40","40<age<60","age>60"
plot(ages,driverage_c3,type="l",xlab= "Age categories",lwd=wd,ylab = "Claim frequency",col="darkred",ylim=lim)
axis(1, at=1:4, labels="age>20","20<age<40","40<age<60","age>60")
plot(ages,driverage_c3,type="l",xlab= "Age categories",lwd=wd,ylab = "Claim frequency",col="darkred",ylim=lim)
axis(1, at=1:4, labels=c("age>20","20<age<40","40<age<60","age>60"))
plot(ages,driverage_c3,type="l",xlab= "Age categories",lwd=wd,ylab = "Claim frequency",col="darkred",ylim=lim)
axis(1, at=1:4, labels=c("age>20","20<age<40","40<age<60","age>60"))
plot(ages,driverage_c3,type="l",xlab= "Age categories",lwd=wd,ylab = "Claim frequency",col="darkred",ylim=lim,xaxt = "n")
axis(1, at=1:4, labels=c("age>20","20<age<40","40<age<60","age>60"))
### prediction of claimfreq depending of age and contract
# 33-36 37-40 41-44 45-48
ages = c(1,2,3,4)
driverage = c(mean(lambdaK[[33]]),mean(lambdaK[[34]]),mean(lambdaK[[35]]),mean(lambdaK[[36]]))
driverage_c1 = c(mean(lambdaK[[37]]),mean(lambdaK[[38]]),mean(lambdaK[[39]]),mean(lambdaK[[40]]))
driverage_c2 = c(mean(lambdaK[[41]]),mean(lambdaK[[42]]),mean(lambdaK[[43]]),mean(lambdaK[[44]]))
driverage_c3 = c(mean(lambdaK[[45]]),mean(lambdaK[[46]]),mean(lambdaK[[47]]),mean(lambdaK[[48]]))
lim = c(0.009,0.0097)
wd=2
plot(ages,driverage,type="l",col="darkblue",lwd=wd,xlab= "Age categories",ylab = "Claim frequency",ylim=lim,xaxt = "n")
par(new = TRUE)
plot(ages,driverage_c1,type="l",xlab= "Age categories",lwd=wd,ylab = "Claim frequency",col="darkgreen",ylim=lim,xaxt = "n")
par(new = TRUE)
plot(ages,driverage_c2,type="l",xlab= "Age categories",lwd=wd,ylab = "Claim frequency",col="darkorange",ylim=lim,xaxt = "n")
par(new = TRUE)
plot(ages,driverage_c3,type="l",xlab= "Age categories",lwd=wd,ylab = "Claim frequency",col="darkred",ylim=lim,xaxt = "n")
axis(1, at=1:4, labels=c("age>20","20<age<40","40<age<60","age>60"))
par(cex = 0.8)
legend("topright",c("No contracts distinction","basic garantee","intermediate garantee","full garantee"),lwd = c(2,2,2,2,2),lty=c(1,1,1,1), col=c("darkblue","darkgreen","darkorange","darkred"),cex=0.8,text.font=6,bty="n")
#"age>20","20<age<40","40<age<60","age>60"
driverage_c1
driverage_c2
driverage_c3
0.009659419/0.009381054
0.009263066/0.008997861
(0.009263066-0.008997861)/0.008997861
(0.009659419-0.009381054)/0.009381054
0.009263066-0.008997861
0.009659419-0.009381054
0.009263066-0.008997861
0.009659419-0.009381054
0.009325858-0.009047775
0.009278380-0.009003319
driverage_c1
driverage_c2
driverage_c1
driverage_c3
driverage_c3[1]
driverage_c3[1]
driverage_c1[1]
driverage_c3[1]
mapply(rep, 1:4, 4:1)
mapply(rep, times=1:4, MoreArgs=list(x=42))
driverage_c3[i] - driverage_c1[i]
driverage_c3[i] - driverage_c1[i]
driverage_c3[i] - driverage_c1[i]
i
i
for (i in 1:4){
table[i,1] =driverage_c3[i]
table[i,2] =driverage_c1[i]
table[i,3] = driverage_c3[i] - driverage_c1[i]
}
for (i in 1:4){
table[i,1] =driverage_c3[[i]]
table[i,2] =driverage_c1[[i]]
table[i,3] = driverage_c3[[i]]- driverage_c1[[i]]
}
driverage_c3[[i]]
driverage_c3[[1]]
table[i,1] =driverage_c3[[1]]
table = matrix(nrow=4,ncol=3)
rownames(table)= c("age>20","20<age<40","40<age<60","age>60")
colnames(table) = c("Full garantee","Basic garantee","Difference (base points")
for (i in 1:4){
table[i,1] =driverage_c3[[1]]
table[i,2] =driverage_c1[[i]]
table[i,3] = driverage_c3[[i]]- driverage_c1[[i]]
}
table = matrix(nrow=4,ncol=3)
rownames(table)= c("age>20","20<age<40","40<age<60","age>60")
colnames(table) = c("Full garantee","Basic garantee","Difference (base points")
for (i in 1:4){
table[i,1] =driverage_c3[i]
table[i,2] =driverage_c1[[i]]
table[i,3] = driverage_c3[[i]]- driverage_c1[[i]]
}
table = matrix(nrow=4,ncol=3)
rownames(table)= c("age>20","20<age<40","40<age<60","age>60")
colnames(table) = c("Full garantee","Basic garantee","Difference (base points")
for (i in 1:4){
table[i,1] =driverage_c3[i]
table[i,2] =driverage_c1[i]
table[i,3] = driverage_c3[i]- driverage_c1[i]
}
kable(table, caption="Claim frequencies")
mean(lambdaK[[32]])
mean(lambdaK[[32]])
mean(lambdaK[[29]])
mean(lambdaK[[32]])-mean(lambdaK[[29]])
mean(lambdaK[[4]])-mean(lambdaK[[1]])
mean(lambdaK[[8]])-mean(lambdaK[5])
mean(lambdaK[[8]])-mean(lambdaK[[5]])
train[9]
colnames(train[9])
"age<60"
View(train)
View(train)
ClaimFreq = list()
GbmP = gbm(Nbclaims~offset(log(Exposure))+Gender+DriverAge+CarAge+Area+Leasing+Power+Fract+Contract, distribution="poisson", data=train,cv.folds=5,shrinkage=0.001,n.trees=2410,train.fraction = 0.5)
summary(GbmP)
GbmP = gbm(Nbclaims~offset(log(Exposure))+Gender+DriverAge+CarAge+Area+Leasing+Power+Fract+Contract, distribution="poisson", data=train,cv.folds=5,shrinkage=0.001,n.trees=2412,train.fraction = 0.5)
GbmP = gbm(Nbclaims~offset(log(Exposure))+Gender+DriverAge+CarAge+Area+Leasing+Power+Fract+Contract, distribution="poisson", data=train,cv.folds=10,shrinkage=0.001,n.trees=2412,train.fraction = 0.5)
summary(GbmP)
test$ClaimFreq = predict(test,GbmP)
test$ClaimFreq = predict(GbmP,test)
View(test)
test$ClaimFreq = exp(predict(GbmP,test)/test$Exposure)
View(test)
test$ClaimFreq = exp(predict(GbmP,test)/log(test$Exposure))
View(test)
cost <- function(r, pi = 0) sqrt(mean((r-pi)^2))
tmp<-cv.glm(data=test,exp(GbmP/log(test$Exposure)),cost,K=10)
test$ClaimFreq = log(predict(GbmP,test)à/log(test$Exposure)
test$ClaimFreq = log(predict(GbmP,test)/log(test$Exposure)
View(test)
View(test)
train$ClaimFreq = train$Nbclaims/train$Exposure
mean(train$ClaimFreq-log(predict(GbmP,train))/log(test$Exposure))
train$ClaimFreq
log(predict(GbmP,train))/log(test$Exposure)
predict(GbmP,train)
log(predict(GbmP,train))
mean(train$ClaimFreq-predict(GbmP,train)/log(test$Exposure))
mean(train$ClaimFreq-predict(GbmP,train)/test$Exposure)
predict.gbm(GbmP,train)
exp(predict.gbm(GbmP,train)/train$Exposure)
mean(exp(predict.gbm(GbmP,train)/train$Exposure))
mean(exp(predict.gbm(GbmP,train)/log(train$Exposure)))
mean(exp(predict.gbm(GbmP,train)/exp(train$Exposure)))
mean(exp(predict.gbm(GbmP,train)/train$Exposure))
test$ClaimFreq = exp(predict.gbm(GbmP,train)/train$Exposure)
View(test)
exp(predict.gbm(GbmP,train)/train$Exposure)
write.csv(test,'DBtest2.csv')
View(test)
segments[[500]] = test
# Segmentation of the customer by horsepower, sex, area and Car age
segments = list(
menlowpow = train[train$Gender == 1 & train$Power == 1,],
mennormpow = train[train$Gender == 1 & train$Power == 2,],
meninterpow = train[train$Gender == 1 & train$Power == 3,],
menhigh = train[train$Gender == 1 & train$Power == 4,],
# 5-8 women and horsepower
womenlowpow = train[train$Gender == 2 & train$Power == 1,],
womennormpow = train[train$Gender == 2 & train$Power == 2,],
womeninterpow = train[train$Gender == 2 & train$Power == 3,],
womenhighpow = train[train$Gender == 2 & train$Power == 4,],
#9-12 men and area
menarea1 = train[train$Gender == 1 & train$Area == 1,],
menarea2 = train[train$Gender == 1 & train$Area == 2,],
menarea3 = train[train$Gender == 1 & train$Area == 3,],
menarea4 = train[train$Gender == 1 & train$Area == 4,],
#13-16 women and area
womenarea1 = train[train$Gender == 2 & train$Area == 1,],
womenarea2 = train[train$Gender == 2 & train$Area == 2,],
womenarea3 = train[train$Gender == 2 & train$Area == 3,],
womenarea4 = train[train$Gender == 2 & train$Area == 4,],
#17-20 men power and car age<3 years
menlowpowage1 = train[train$Gender == 1 & train$Power == 1 & train$CarAge < 3,],
mennormpowage1 = train[train$Gender == 1 & train$Power == 2 & train$CarAge < 3,],
meninterpowage1 = train[train$Gender == 1 & train$Power == 3 & train$CarAge < 3,],
menhighpowage1 = train[train$Gender == 1 & train$Power == 4 & train$CarAge < 3,],
#21-24 women power and car age<3 years
womenlowpowage1 = train[train$Gender == 2 & train$Power == 1 & train$CarAge < 3,],
womennormpowage1 = train[train$Gender == 2 & train$Power == 2 & train$CarAge < 3,],
womeninterpowage1 = train[train$Gender == 2 & train$Power == 3 & train$CarAge < 3,],
womenhighpowage1 = train[train$Gender == 2 & train$Power == 4 & train$CarAge < 3,],
menlowpowage2 = train[train$Gender == 1 & train$Power == 1 & train$CarAge >= 3,],
mennormpowage2 = train[train$Gender == 1 & train$Power == 2 & train$CarAge >= 3,],
meninterpowage2 = train[train$Gender == 1 & train$Power == 3 & train$CarAge >= 3,],
menhighpowage2 = train[train$Gender == 1 & train$Power == 4 & train$CarAge >= 3,],
womenlowpowage2 = train[train$Gender == 2 & train$Power == 1 & train$CarAge >= 3,],
womennormpowage2 = train[train$Gender == 2 & train$Power == 2 & train$CarAge >= 3,],
womeninterpowage2 = train[train$Gender == 2 & train$Power == 3 & train$CarAge >= 3,],
womenhighpowage2 = train[train$Gender == 2 & train$Power == 4 & train$CarAge >= 3,])
#33-36: drivers ages
ages = c(20,40,60)
segments[[33]] = train[train$DriverAge < ages[1],]
segments[[34]] = train[train$DriverAge > ages[1] & train$DriverAge < ages[2],]
segments[[35]] = train[train$DriverAge > ages[2] & train$DriverAge < ages[3],]
segments[[36]] = train[train$DriverAge > ages[3],]
k= 37
for  (i in 1:length(table(train$Contract))){
segments[[k]] = train[train$DriverAge < ages[1] & train$Contract == i,]
segments[[k+1]] = train[train$DriverAge > ages[1] & train$DriverAge < ages[2] & train$Contract == i,]
segments[[k+2]] = train[train$DriverAge > ages[2] & train$DriverAge < ages[3] & train$Contract == i,]
segments[[k+3]] = train[train$DriverAge > ages[3] & train$Contract == i,]
k=k+4
}
segments[[500]] = test
M    = 100         #number of samples
nr   = nrow(train)  #size of the dataset
size = nr      #size of the sample
lambdaK = list()
for (i in 1:length(segments)){
lambdaK[[i]] = rep(0,nrow(segments[[i]]))
}
lambdaM <- matrix(0 , M,nrow(train))
ageM    <- matrix(0 , M,nrow(train))
dstar = 5;
listcovariates=c("Gender","DriverAge","CarAge","Area","Leasing","Power","Fract","Contract")
set.seed(10)
for (ct in c(1:M))
{
tmp     <-sample(nr,size, replace = TRUE, prob = NULL)
train2 <-train[tmp,]
rndFact <-sample(8, dstar, replace = FALSE, prob = NULL)
equation=paste("cbind(Exposure,Nbclaims)~",listcovariates[rndFact[1]])
for (j in c(2:dstar)){
t=paste(equation,listcovariates[rndFact[j]],sep="+")
}
d.tree <-rpart( equation,data=train2, method="poisson",
parms=list(shrink=1),control=rpart.control(cp=0.0002))
# if (!is.null(d.tree$csplit))
# {
#    plot(d.tree,main = "Regression tree, small d")
#    text(d.tree) #equivalent to labels(d.tree)
# }
for (i in 1:length(segments)){
lambdaK[[i]] <-lambdaK[[i]]+predict(d.tree,segments[[i]])
}
}
for (i in 1:length(segments)){
lambdaK[[i]] = lambdaK[[i]]/M
}
# Segmentation of the customer by horsepower, sex, area and Car age
segments = list(
menlowpow = train[train$Gender == 1 & train$Power == 1,],
mennormpow = train[train$Gender == 1 & train$Power == 2,],
meninterpow = train[train$Gender == 1 & train$Power == 3,],
menhigh = train[train$Gender == 1 & train$Power == 4,],
# 5-8 women and horsepower
womenlowpow = train[train$Gender == 2 & train$Power == 1,],
womennormpow = train[train$Gender == 2 & train$Power == 2,],
womeninterpow = train[train$Gender == 2 & train$Power == 3,],
womenhighpow = train[train$Gender == 2 & train$Power == 4,],
#9-12 men and area
menarea1 = train[train$Gender == 1 & train$Area == 1,],
menarea2 = train[train$Gender == 1 & train$Area == 2,],
menarea3 = train[train$Gender == 1 & train$Area == 3,],
menarea4 = train[train$Gender == 1 & train$Area == 4,],
#13-16 women and area
womenarea1 = train[train$Gender == 2 & train$Area == 1,],
womenarea2 = train[train$Gender == 2 & train$Area == 2,],
womenarea3 = train[train$Gender == 2 & train$Area == 3,],
womenarea4 = train[train$Gender == 2 & train$Area == 4,],
#17-20 men power and car age<3 years
menlowpowage1 = train[train$Gender == 1 & train$Power == 1 & train$CarAge < 3,],
mennormpowage1 = train[train$Gender == 1 & train$Power == 2 & train$CarAge < 3,],
meninterpowage1 = train[train$Gender == 1 & train$Power == 3 & train$CarAge < 3,],
menhighpowage1 = train[train$Gender == 1 & train$Power == 4 & train$CarAge < 3,],
#21-24 women power and car age<3 years
womenlowpowage1 = train[train$Gender == 2 & train$Power == 1 & train$CarAge < 3,],
womennormpowage1 = train[train$Gender == 2 & train$Power == 2 & train$CarAge < 3,],
womeninterpowage1 = train[train$Gender == 2 & train$Power == 3 & train$CarAge < 3,],
womenhighpowage1 = train[train$Gender == 2 & train$Power == 4 & train$CarAge < 3,],
menlowpowage2 = train[train$Gender == 1 & train$Power == 1 & train$CarAge >= 3,],
mennormpowage2 = train[train$Gender == 1 & train$Power == 2 & train$CarAge >= 3,],
meninterpowage2 = train[train$Gender == 1 & train$Power == 3 & train$CarAge >= 3,],
menhighpowage2 = train[train$Gender == 1 & train$Power == 4 & train$CarAge >= 3,],
womenlowpowage2 = train[train$Gender == 2 & train$Power == 1 & train$CarAge >= 3,],
womennormpowage2 = train[train$Gender == 2 & train$Power == 2 & train$CarAge >= 3,],
womeninterpowage2 = train[train$Gender == 2 & train$Power == 3 & train$CarAge >= 3,],
womenhighpowage2 = train[train$Gender == 2 & train$Power == 4 & train$CarAge >= 3,])
#33-36: drivers ages
ages = c(20,40,60)
segments[[33]] = train[train$DriverAge < ages[1],]
segments[[34]] = train[train$DriverAge > ages[1] & train$DriverAge < ages[2],]
segments[[35]] = train[train$DriverAge > ages[2] & train$DriverAge < ages[3],]
segments[[36]] = train[train$DriverAge > ages[3],]
k= 37
for  (i in 1:length(table(train$Contract))){
segments[[k]] = train[train$DriverAge < ages[1] & train$Contract == i,]
segments[[k+1]] = train[train$DriverAge > ages[1] & train$DriverAge < ages[2] & train$Contract == i,]
segments[[k+2]] = train[train$DriverAge > ages[2] & train$DriverAge < ages[3] & train$Contract == i,]
segments[[k+3]] = train[train$DriverAge > ages[3] & train$Contract == i,]
k=k+4
}
segments[[49]] = test
M    = 100         #number of samples
nr   = nrow(train)  #size of the dataset
size = nr      #size of the sample
lambdaK = list()
for (i in 1:length(segments)){
lambdaK[[i]] = rep(0,nrow(segments[[i]]))
}
lambdaM <- matrix(0 , M,nrow(train))
ageM    <- matrix(0 , M,nrow(train))
dstar = 5;
listcovariates=c("Gender","DriverAge","CarAge","Area","Leasing","Power","Fract","Contract")
set.seed(10)
for (ct in c(1:M))
{
tmp     <-sample(nr,size, replace = TRUE, prob = NULL)
train2 <-train[tmp,]
rndFact <-sample(8, dstar, replace = FALSE, prob = NULL)
equation=paste("cbind(Exposure,Nbclaims)~",listcovariates[rndFact[1]])
for (j in c(2:dstar)){
t=paste(equation,listcovariates[rndFact[j]],sep="+")
}
d.tree <-rpart( equation,data=train2, method="poisson",
parms=list(shrink=1),control=rpart.control(cp=0.0002))
# if (!is.null(d.tree$csplit))
# {
#    plot(d.tree,main = "Regression tree, small d")
#    text(d.tree) #equivalent to labels(d.tree)
# }
for (i in 1:length(segments)){
lambdaK[[i]] <-lambdaK[[i]]+predict(d.tree,segments[[i]])
}
}
for (i in 1:length(segments)){
lambdaK[[i]] = lambdaK[[i]]/M
}
a = lambdaK[500]
View(a)
lambdaK[500]
a = lambdaK[49]
View(a)
a = lambdaK[[49]]
lambdaK[[49]]
test$ClaimFreq = lambdaK[[49]]
View(test)
write.csv(test,'DBtest2.csv')
write.csv(test,'DBtest3.csv')
age
GbmP = gbm(Nbclaims~offset(log(Exposure))+Gender+DriverAge+CarAge+Area+Leasing+Power+Fract+Contract, distribution="poisson", data=train,cv.folds=5,shrinkage=0.001,n.trees=2412,train.fraction = 0.5)
